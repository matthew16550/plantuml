name: font-sprite

on:
  push:
  workflow_dispatch:

jobs:
  font-sprite:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        java_distribution: [ zulu ]
        java_version: [ 8.0.302+8, 11.0.12+7, 17 ]
        os: [ ubuntu-latest ]
        #        java_version: [ 8, 11, 17 ]
        #        os: [ macos-latest, ubuntu-latest, windows-latest ]

        # All temurin:
        #        java_version: [ 8.0.302+8, 11.0.12+7, 17.0.0+35 ]

        # All zulu:
#        java_version: [ 8.0.302+8, 9.0.7+0, 10.0.2+13, 11.0.12+7, 12.0.2+3, 13.0.8+5, 14.0.2+12, 15.0.4+5, 16.0.2+7, 17.0.0+35 ]

        # All OS:
#        os: [ macos-11, macos-10.15, ubuntu-18.04, ubuntu-20.04, windows-2016, windows-2019, windows-2022 ]

    #        include:
    #          - java_distribution: temurin
    #            java_version: 8
    #            os: ubuntu-latest
    #          - java_distribution: temurin
    #            java_version: 11
    #            os: ubuntu-latest
    #          - java_distribution: temurin
    #            java_version: 17
    #            os: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Configure job
        id: config
        env:
          JAVA_VERSION: ${{ matrix.java_version }}
        run: echo "::set-output name=java_major_version::${JAVA_VERSION%%.*}"
          
      - name: Checkout the repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up java
        uses: actions/setup-java@v2.3.0
        with:
          java-version: ${{ matrix.java_version }}
          distribution: ${{ matrix.java_distribution }}
          cache: maven

      # Downloading all the dependencies is very log spammy, so we do this in its own step.
      - name: Prime maven cache
        run: mvn --batch-mode dependency:go-offline

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar

      - name: Compile
        run: mvn --batch-mode compile resources:testResources compiler:testCompile

      - name: Test
        run: |
          if [[ "${{ matrix.java_version }}" != 8* ]]; then
            export MAVEN_OPTS=" \
              --add-exports java.desktop/sun.java2d.marlin=ALL-UNNAMED \
              --add-exports java.desktop/sun.java2d.pipe=ALL-UNNAMED \
            "
          fi

          mvn --batch-mode exec:java \
             -Dexec.mainClass=org.junit.platform.console.ConsoleLauncher \
             -Dexec.classpathScope=test \
             -Dexec.args=" \
                 --disable-ansi-colors \
                 --select-class net.sourceforge.plantuml.approvaltesting.ApprovalTestingTest \
                 --select-class net.sourceforge.plantuml.ugraphic.fontspritesheet.FontSpriteSheetTest
             " \
             -Dsun.java2d.renderer.log=true 

      - name: Upload approval test failures
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.run_number }}-${{ matrix.os }}-${{ matrix.java_distribution }}-${{ matrix.java_version }}-approval-test-failures
          path: |
            test/**/*.failed.*
            !test/**/ApprovalTestingTest.test_withMaxFailures.1.failed.txt
            !test/**/ApprovalTestingTest.test_withMaxFailures.2.failed.txt
          if-no-files-found: ignore

      - name: Sonar analysis
        if: ${{ steps.config.outputs.java_major_version >= 11 }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn --batch-mode org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=matthew16550_plantuml
